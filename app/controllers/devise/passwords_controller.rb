class Devise::PasswordsController < DeviseTokenAuth::PasswordsController
    before_action :set_user_by_token, :only => [:update]
    skip_after_action :update_auth_header, :only => [:create, :edit]
  # POST /resource/password
  def create
   super
  end


#   # PUT /resource/password
  def update
    
    super
    
  end

  def edit
     # if a user is not found, return nil
      @resource = resource_class.with_reset_password_token(
        resource_params[:reset_password_token]
      )

      if @resource
        client_id  = SecureRandom.urlsafe_base64(nil, false)
        token      = SecureRandom.urlsafe_base64(nil, false)
        token_hash = BCrypt::Password.create(token)
        expiry     = (Time.now + 7.days).to_i

        @resource.tokens[client_id] = {
          token:  token_hash,
          expiry: expiry
        }

        # ensure that user is confirmed
        @resource.skip_confirmation! if @resource.devise_modules.include?(:confirmable) && !@resource.confirmed_at

        # allow user to change password once without current_password
        @resource.allow_password_change = true;

        @resource.save!

        yield @resource if block_given?

        redirect_header_options = {reset_password: true}
        redirect_headers = build_redirect_headers(token,
                                                  client_id,
                                                  redirect_header_options)
        
        redirect_headers[:uid]    =  @resource.uid
        redirect_headers[:expiry] =  @resource.tokens[redirect_headers[:client_id]]['expiry']

        # this was generated by DeviseTokenAuth::URL.generate
        redirect_url = "#{params[:redirect_url]}?#{redirect_headers.to_query}"

        redirect_to(redirect_url)
      else
        render_edit_error
      end
      
  
  end

  private 

    def build_redirect_headers(access_token, client, redirect_header_options = {})
       {
        DeviseTokenAuth.headers_names[:"access-token"] => access_token,
        DeviseTokenAuth.headers_names[:"client"] => client,
        :config => params[:config],

        # Legacy parameters which may be removed in a future release.
        # Consider using "client" and "access-token" in client code.
        # See: github.com/lynndylanhurley/devise_token_auth/issues/993
        :client_id => client,
        :token => access_token
      }.merge(redirect_header_options)
    end
    

end
